@using HTSV.FE.Models.Common
@using HTSV.FE.Models.ThamGia
@using System.Security.Claims
@model PaginatedList<ThamGiaDTO>

@{
    ViewData["Title"] = "Danh sách tham gia hoạt động";
    var userRole = Context.Session.GetString("Role");
    
    // Kiểm tra role và set layout tương ứng
    if (userRole == "Admin")
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

<div class="container mx-auto px-4">
    <div class="bg-white p-6 rounded-lg shadow-lg">
        <!-- Breadcrumb -->
        <nav class="flex mb-4" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a href="/" class="text-gray-700 hover:text-primary">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
                        </svg>
                        Trang chủ
                    </a>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
                        </svg>
                        <span class="text-gray-400">Danh sách tham gia</span>
                    </div>
                </li>
            </ol>
        </nav>

        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold">@ViewData["Title"]</h1>
            @if (userRole == "Admin")
            {
                <button onclick="showExportModal()" class="bg-primary text-white px-4 py-2 rounded hover:bg-primary-dark">
                    Xuất Excel
                </button>
            }
        </div>

        <!-- Search Section -->
        <div class="mb-6">
            <div class="flex gap-4">
                <input type="text" id="searchInput" placeholder="Tìm kiếm..." 
                       class="flex-1 border rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary">
                <button onclick="search()" class="bg-gray-100 px-4 py-2 rounded hover:bg-gray-200">
                    Tìm kiếm
                </button>
            </div>
        </div>

        <!-- Table -->
        <div class="overflow-x-auto">
            <table class="min-w-full bg-white">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">STT</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Người tham gia</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Hoạt động</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Thời gian điểm danh</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Hình thức điểm danh</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Trạng thái</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Thao tác</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">
                    @{
                        var stt = (Model.PageIndex - 1) * Model.PageSize;
                    }
                    @foreach (var item in Model.Items)
                    {
                        stt++;
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">@stt</td>
                            <td class="px-6 py-4 whitespace-nowrap">@item.TenNguoiThamGia</td>
                            <td class="px-6 py-4 whitespace-nowrap">@item.TenHoatDong</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(item.ThoiGianDiemDanh?.ToString("dd/MM/yyyy HH:mm") ?? "Chưa điểm danh")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">@item.HinhThucDiemDanh</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @{
                                    var trangThaiClass = item.TrangThai switch
                                    {
                                        1 => "bg-green-100 text-green-800",
                                        2 => "bg-red-100 text-red-800",
                                        _ => "bg-yellow-100 text-yellow-800"
                                    };

                                    var trangThaiText = item.TrangThai switch
                                    {
                                        1 => "Đã điểm danh",
                                        2 => "Vắng mặt",
                                        _ => "Chưa điểm danh"
                                    };
                                }
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @trangThaiClass">
                                    @trangThaiText
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <a href="/ThamGia/Details/@item.Id" class="text-primary hover:text-primary-dark">Chi tiết</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="mt-4 flex justify-between items-center">
            <div class="text-sm text-gray-500">
                Hiển thị @(stt - Model.Items.Count + 1) đến @stt trong tổng số @Model.TotalPages kết quả
            </div>
            <div class="flex gap-2">
                @if (Model.HasPreviousPage)
                {
                    <a href="@Url.Action("Index", new { page = Model.PageIndex - 1, pageSize = Model.PageSize })"
                       class="px-3 py-1 border rounded hover:bg-gray-100">Trước</a>
                }
                @if (Model.HasNextPage)
                {
                    <a href="@Url.Action("Index", new { page = Model.PageIndex + 1, pageSize = Model.PageSize })"
                       class="px-3 py-1 border rounded hover:bg-gray-100">Sau</a>
                }
            </div>
        </div>
    </div>
</div>

@if (userRole == "Admin")
{
    <!-- Export Modal -->
    <div id="exportModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3">
                <h3 class="text-lg font-medium leading-6 text-gray-900 mb-4">Xuất danh sách tham gia</h3>
                <div class="mb-4">
                    <label for="hoatDongId" class="block text-sm font-medium text-gray-700 mb-2">Hoạt động</label>
                    <select id="hoatDongId" class="w-full border rounded px-3 py-2">
                        <option value="">-- Tất cả --</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label for="maSinhVien" class="block text-sm font-medium text-gray-700 mb-2">Mã sinh viên</label>
                    <input type="text" id="maSinhVien" class="w-full border rounded px-3 py-2" placeholder="Nhập mã sinh viên">
                </div>
            </div>
            <div class="flex justify-end gap-2 mt-4">
                <button onclick="closeExportModal()" class="px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded">
                    Hủy
                </button>
                <button onclick="confirmExport()" class="px-4 py-2 bg-primary text-white hover:bg-primary-dark rounded">
                    Xuất Excel
                </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">

    <script>
        // Cấu hình toastr
        toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
        }

        function showExportModal() {
            document.getElementById('exportModal').classList.remove('hidden');
            loadHoatDongs();
        }

        function closeExportModal() {
            document.getElementById('exportModal').classList.add('hidden');
            document.getElementById('hoatDongId').value = '';
            document.getElementById('maSinhVien').value = '';
        }

        async function loadHoatDongs() {
            try {
                const response = await fetch('/ThamGia/GetHoatDongs');
                const result = await response.json();

                if (result.success) {
                    const select = document.getElementById('hoatDongId');
                    select.innerHTML = '<option value="">-- Tất cả --</option>';
                    
                    result.data.forEach(hoatDong => {
                        const option = document.createElement('option');
                        option.value = hoatDong.id;
                        option.textContent = hoatDong.tenHoatDong;
                        select.appendChild(option);
                    });
                } else {
                    toastr.error('Không thể tải danh sách hoạt động');
                }
            } catch (error) {
                console.error('Error:', error);
                toastr.error('Đã xảy ra lỗi khi tải danh sách hoạt động');
            }
        }

        function confirmExport() {
            const hoatDongId = document.getElementById('hoatDongId').value;
            const maSinhVien = document.getElementById('maSinhVien').value;

            let url = '/ThamGia/Export';
            const params = [];

            if (hoatDongId) {
                params.push(`hoatDongId=${hoatDongId}`);
            }
            if (maSinhVien) {
                params.push(`maSinhVien=${maSinhVien}`);
            }

            if (params.length > 0) {
                url += '?' + params.join('&');
            }

            window.location.href = url;
            closeExportModal();
        }

        function search() {
            const searchTerm = document.getElementById('searchInput').value;
            window.location.href = `/ThamGia/Index?searchTerm=${encodeURIComponent(searchTerm)}`;
        }
    </script>
} 